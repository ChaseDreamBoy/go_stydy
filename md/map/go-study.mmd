Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# go 语言学习
> align=`left`,collapsed=`true`


## 基础知识

### 安装

#### 从官方网址 https://golang\.google\.cn/dl 下载二进制压缩包

#### 解压后会得到一个名字为go的目录，并放到指定位置

##### windows在C盘根目录下\(C:/go是Go语言的安装根目录\)

##### linux在/usr/local\(/usr/local/go是go语言的安装目录\) 

### 环境变量
> collapsed=`true`


#### GOROOT \(包含go的安装目录的路径\)

#### GOPATH \(包含若干个工作区目录的路径\)

#### GOBIN \(包含用于放置go程序生成的可执行文件目录的路径\)

### 代码编织

#### 工作区
> collapsed=`true`


##### src子目录
> collapsed=`true`


###### 放置源码文件的目录

##### pkg子目录
> collapsed=`true`


###### 放置归档文件的目录

##### bin子目录
> collapsed=`true`


###### 放置可执行文件的目录

###### 仅在未设置GOBIN时有用

#### 代码包 
> collapsed=`true`


##### 与src子目录下的某一个子目录一一对应

##### 可通过代码包导入路径来导入到源码文件
> collapsed=`true`


###### 代码包导入路径即为从src子目录到该包对应路径的相对路径

##### 同一个代码包中的所有源码文件的代码包声明语言都应该一致

##### 代码包名称可以与其对应的目录名称不同
> collapsed=`true`


###### 安装源码文件时以代码包命名称为准

###### 导入代码包时以代码包命名称为准

###### 强烈建议两个名称一致

#### 源码文件

##### 命令源码文件
> collapsed=`true`


###### 独立的程序入口

###### 属于main包，包含无参无结果的main函数

###### 可以通过 go run 命令运行，可以接受命令行参数

###### main 函数执行的结果就意味着当前的程序运行结束

###### 同一个源码包中不要放多个命令源码文件

###### 命令源码文件与库源码文件也不要放在同一个代码包

###### 构建
> collapsed=`true`


####### 构建后生成可执行文件
> collapsed=`true`


######## 可执行文件即 executable file
> collapsed=`true`


######### 可在命令行中运行的文件

######### 在windows中就是扩展名为 \.exe 的文件

######### 在linux中一般无扩展名

####### 生成位置在命令行目录

###### 安装
> collapsed=`true`


####### 安装后生成可执行文件

####### 生成位置在当前工作区的bin子目录或GOBIN包含的目录

##### 库源码文件
> collapsed=`true`


###### 专用于放置可供其他代码使用的程序实体

###### 构建
> collapsed=`true`


####### 作用在于检查和验证

####### 构建后只生成临时文件
> collapsed=`true`


######## 在操作系统的临时目录下

######## 开发者一般可以不关心

###### 安装
> collapsed=`true`


####### 安装后生成归档文件
> collapsed=`true`


######## 归档文件即archive file
> collapsed=`true`


######### 扩展名为 \.a 的文件

######### 即为静态链接库文件

####### 生成位置在当前工作区的pkg子目录

##### 测试源码文件

###### 功能测试源码文件

####### 测试函数名称 

######## TestXXX

####### 测试函数签名 

######## \(t\. \*testing\.T\)

###### 性能\(基准\)测试源码文件

###### 示例\(样本\)测试源码文件

### go语言规范

### go语言基础编程

### go语言命令

### go语言并发编程

### 学习资源
> collapsed=`true`


#### 《Go并发编程实战》第一版

#### 《Go命令教程》https://github\.com/hyper0x/go\_command\_tutorial

## 进阶知识
> collapsed=`true`,leftSide=`true`


### Go语言数据类型使用进阶

### Go语言标准库使用进阶

### Go语言并发编程使用进阶
